#! /bin/bash

#this script is to test solutions on random test cases and against a tester
#requirements-
#Generator with manual seed that can be provided from shell
#Tester to test the same generated test case using brute force solution
#diff command to see whether both solution gives same answer
#compile all cpp files
#generate a input file test case testCase
#run that test case against ur solution save it inp mySol
#run that test case against brute force solution save inp it bruteSol
#run a diff command
#clear all created files except the file where it went wrong

rm -rf a.out
rm -rf gen.out
rm -rf tester.out
if g++ -std=gnu++14 -Wall -g -Wextra -Wshadow -Wfloat-equal -Wconversion -Wshift-overflow=2 -Wduplicated-cond -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_FORTIFY_SOURCE=2 -fsanitize=signed-integer-overflow -fsanitize=bounds -O2 $1; then
	echo -e "\e[1m\e[32mSource compiled successfully...\e[0m"
else
	exit
fi
if g++ -std=gnu++14 -Wall -g -Wextra -Wshadow -Wfloat-equal -Wconversion -Wshift-overflow=2 -Wduplicated-cond -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_FORTIFY_SOURCE=2 -fsanitize=signed-integer-overflow -fsanitize=bounds -O2 gen.cpp -o gen.out; then
	echo -e "\e[1m\e[32mGenerator compiled successfully...\e[0m"
else
	exit
fi
if g++ -std=gnu++14 -Wall -g -Wextra -Wshadow -Wfloat-equal -Wconversion -Wshift-overflow=2 -Wduplicated-cond -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_FORTIFY_SOURCE=2 -fsanitize=signed-integer-overflow -fsanitize=bounds -O2 tester.cpp -o tester.out; then
	echo -e "\e[1m\e[32mTester compiled successfully...\e[0m"
else
	exit
fi
sleep 1

INPUT=input
OUTPUT=my_output
EXPECTED=output
test_case=1
while [ -f $INPUT$test_case ]
do
   test_case=$((test_case + 1))
done


for ((i = 1; ; ++i)); do
	./gen.out $i > $INPUT$test_case
	if timeout 3 /usr/bin/time --format="  (%e sec, %M kb)" 2> time_err ./a.out < $INPUT$test_case > $OUTPUT$test_case ; then
		./tester.out < $INPUT$test_case  > $EXPECTED$test_case
		if diff --brief --ignore-trailing-space $OUTPUT$test_case $EXPECTED$test_case >> errlg; then  #do a diff on output and my_output
			echo -en "\e[1m\e[32mSample test $i: Accepted\e[0m"
         cat time_err
			rm -rf errlg
		else
			echo -en "\e[1m\e[31mSample test $i: Wrong Answer\e[0m"
         cat time_err
         echo -e "\nINPUT : "
			cat $INPUT$test_case
         echo -e " "
         echo -e "EXPECTED : "
			cat $EXPECTED$test_case
         echo -e " "
         echo -e "OUTPUT : "
			cat $OUTPUT$test_case

         echo
         read new_test_case
         echo -en "Do you want to add this test case? (y/n): "
         if [ "$new_test_case" = "y" ]; then
            echo "New test case added: input$test_case"
            rm -rf time_err
            exit
         fi
         rm -rf $INPUT$test_case $EXPECTED$test_case $OUTPUT$test_case time_err
			exit
		fi
	else
		echo -en "\e[91m\e[1mSample test $i: Time Limit Exceeded! \e[0mAllowed : 1s\e[0m"
      cat time_err
		cat $INPUT$test_case
      rm -rf $INPUT$test_case $EXPECTED$test_case $OUTPUT$test_case time_err
		exit
	fi
done

rm -rf gen.out
rm -rf tester.out
